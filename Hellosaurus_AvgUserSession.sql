WITH SESSIONS AS (
SELECT
      EVENT.USER_ID || '-' || ROW_NUMBER() OVER(PARTITION BY EVENT.USER_ID ORDER BY EVENT.TIMESTAMP) AS SESSION_ID
      , EVENT.USER_ID
      , EVENT.TIMESTAMP AS SESSION_START_AT
      , LEAD(TIMESTAMP) OVER(PARTITION BY EVENT.USER_ID ORDER BY EVENT.TIMESTAMP) AS NEXT_SESSION_START_AT
    FROM
      (SELECT
            E.USER_ID
         , E.TIMESTAMP
             , DATE_PART('minute', E.TIMESTAMP - LAG(E.TIMESTAMP) OVER(PARTITION BY E.USER_ID ORDER BY E.TIMESTAMP)) AS INACTIVITY_TIME ,
             E.EVENT
          FROM EVENTS AS E
          WHERE EVENT NOT LIKE '%Email%' AND EVENT NOT LIKE '%Push%'
      ) AS EVENT
    WHERE (EVENT.INACTIVITY_TIME > 5 OR EVENT.INACTIVITY_TIME IS NULL))

SELECT SUM(DURATION) / COUNT(*) AS AVERAGE_USER_SESSION, USER_ID, WEEKLY FROM 
( 
SELECT SESSION_ID, SESSIONS.USER_ID, DATE_PART('minute', MAX(EVENTS.TIMESTAMP) - MIN(EVENTS.TIMESTAMP)) AS DURATION,
DATE_PART('week', TIMESTAMP::date) AS WEEKLY
FROM SESSIONS LEFT JOIN EVENTS ON EVENTS.USER_ID = SESSIONS.USER_ID
AND EVENTS.TIMESTAMP >= SESSIONS.SESSION_START_AT
AND EVENTS.TIMESTAMP < SESSIONS.NEXT_SESSION_START_AT
GROUP BY SESSIONS.USER_ID, WEEKLY, SESSION_ID
) FINAL
WHERE FINAL.DURATION > 2
GROUP BY WEEKLY, USER_ID
ORDER BY USER_ID
